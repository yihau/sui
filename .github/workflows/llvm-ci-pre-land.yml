# CI jobs to be run upon the code lands to the main branch or GitHub Action test branches.

name: llvm-ci-pre-land

on:
  push:
    branches: [solana]
  pull_request:
    branches: [solana]
  workflow_dispatch:

jobs:
  unit-tests:
    uses: ./.github/workflows/unit-test.yml

  move-cli-tests-solana:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - id: acquire_solana_tools
        shell: bash
        run: |
          source ./scripts/acquire_solana_tools.sh
          echo "MOVE_DEV_PATH=$MOVE_DEV_PATH" >> $GITHUB_ENV
          echo "PLATFORM_TOOLS_PATH=$PLATFORM_TOOLS_PATH" >> $GITHUB_ENV
          echo "MOVE_NATIVE_PATH=${{ github.workspace }}/language/move-native" >> $GITHUB_ENV
      - name: run Solana-based move cli tests
        working-directory: ./external-crates/move
        run: "cargo test --features solana-backend -p move-cli --test build_testsuite_solana --test move_unit_tests_solana -- --test-threads 1"
        env:
          LLVM_SYS_170_PREFIX: ${{ env.MOVE_DEV_PATH }}
          MOVE_NATIVE: ${{ env.MOVE_NATIVE_PATH }}
          PLATFORM_TOOLS_ROOT: ${{ env.PLATFORM_TOOLS_PATH }}

  move-stdlib-tests-solana:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - id: acquire_solana_tools
        shell: bash
        run: |
          source ./scripts/acquire_solana_tools.sh
          echo "MOVE_DEV_PATH=$MOVE_DEV_PATH" >> $GITHUB_ENV
          echo "PLATFORM_TOOLS_PATH=$PLATFORM_TOOLS_PATH" >> $GITHUB_ENV
          echo "MOVE_NATIVE_PATH=${{ github.workspace }}/language/move-native" >> $GITHUB_ENV
      - name: run Solana-based move stdlib tests
        working-directory: ./external-crates/move
        run: "cargo run --features solana-backend -p move-cli --bin move -- test --solana -p language/move-stdlib"
        env:
          LLVM_SYS_170_PREFIX: ${{ env.MOVE_DEV_PATH }}
          MOVE_NATIVE: ${{ env.MOVE_NATIVE_PATH }}
          PLATFORM_TOOLS_ROOT: ${{ env.PLATFORM_TOOLS_PATH }}

  move-unit-test-framework-tests-solana:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - id: acquire_solana_tools
        shell: bash
        run: |
          source ./scripts/acquire_solana_tools.sh
          echo "MOVE_DEV_PATH=$MOVE_DEV_PATH" >> $GITHUB_ENV
          echo "PLATFORM_TOOLS_PATH=$PLATFORM_TOOLS_PATH" >> $GITHUB_ENV
          echo "MOVE_NATIVE_PATH=${{ github.workspace }}/language/move-native" >> $GITHUB_ENV
      - name: run Solana-based move unit test framework tests
        working-directory: ./external-crates/move
        run: "cargo test --features solana-backend -p move-unit-test --test move_unit_test_testsuite -- --test-threads 1"
        env:
          LLVM_SYS_170_PREFIX: ${{ env.MOVE_DEV_PATH }}
          MOVE_NATIVE: ${{ env.MOVE_NATIVE_PATH }}
          PLATFORM_TOOLS_ROOT: ${{ env.PLATFORM_TOOLS_PATH }}
