; ModuleID = '0x1__signer'
source_filename = "./../../../../../move-stdlib/sources/signer.move"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "sbf-solana-solana"

declare i32 @memcmp(ptr, ptr, i64)

define [32 x i8] @"0000000000000001_signer_address_of_HobbRqPY4HqJJ6"(ptr nonnull readonly %s) !dbg !2 {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca ptr, align 8
  %local_3 = alloca [32 x i8], align 1
  store ptr %s, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8, !dbg !10
  store ptr %load_store_tmp, ptr %local_1, align 8, !dbg !10
  call void @llvm.dbg.declare(metadata ptr %local_0, metadata !11, metadata !DIExpression()), !dbg !10
  call void @llvm.dbg.declare(metadata ptr %local_1, metadata !13, metadata !DIExpression()), !dbg !10
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call ptr @move_native_signer_borrow_address(ptr %loaded_alloca)
  store ptr %retval, ptr %local_2, align 8
  %load_deref_store_tmp1 = load ptr, ptr %local_2, align 8
  %load_deref_store_tmp2 = load [32 x i8], ptr %load_deref_store_tmp1, align 1
  store [32 x i8] %load_deref_store_tmp2, ptr %local_3, align 1
  %retval1 = load [32 x i8], ptr %local_3, align 1
  ret [32 x i8] %retval1
}

declare ptr @move_native_signer_borrow_address(ptr)

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!address_of = !{!2, !7, !8, !9}

!0 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !1, producer: "move-mv-llvm-compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!1 = !DIFile(filename: "signer.move", directory: "/language/move-stdlib/sources")
!2 = distinct !DISubprogram(name: "address_of", linkageName: "address_of", scope: !1, file: !1, line: 11, type: !3, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !6)
!3 = !DISubroutineType(types: !4)
!4 = !{!5}
!5 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "unspecified type")
!6 = !{}
!7 = distinct !DILexicalBlock(scope: !2, file: !1, line: 10)
!8 = !DINamespace(name: "address_of", scope: !1)
!9 = !DILocation(line: 11, column: 4, scope: !7)
!10 = !DILocation(line: 13, column: 25, scope: !2)
!11 = !DILocalVariable(name: "load_store_./../../../../../move-stdlib/sources/signer.move_13_s", scope: !12, file: !1, line: 13, type: !5)
!12 = distinct !DILexicalBlock(scope: !2, file: !1, line: 13, column: 25)
!13 = !DILocalVariable(name: "load_store_./../../../../../move-stdlib/sources/signer.move_13_s", scope: !14, file: !1, line: 13, type: !5)
!14 = distinct !DILexicalBlock(scope: !2, file: !1, line: 13, column: 25)
